<snippet>
  <content><![CDATA[
class binaryLifting {
public:
	vector<vector<int>> tree, anc;
	vector<int> lvl;
	int n;

	binaryLifting(int n, vector<vector<int>> &t) {
		this -> n = n;
		anc = vector<vector<int>>(21, vector<int>(n + 1));

		lvl = vector<int>(n + 1);
		tree = t;
		build();
	}

	void dfs(int node, int par) {
		for (auto &val : tree[node]) {
			if (val == par) continue;
			lvl[val] = 1 + lvl[node];
			anc[0][val] = node;
			dfs(val, node);
		}
	}
	void build() {
		dfs(1, 0);
		for (int i = 1; i < 21; i++) {
			for (int j = 1; j <= n; j++) {
				anc[i][j] = anc[i - 1][anc[i - 1][j]];
			}
		}
	}

	void travel(int &u, int dis) {
		for (int i = 20; i >= 0; i--) {
			if ((dis >> i) & 1) u = anc[i][u];
		}
	}

	int lca(int u, int v) {
		int dis = abs(lvl[u] - lvl[v]);

		if (lvl[u] < lvl[v]) swap(u, v);
		travel(u, dis);

		if (u == v) return u;

		for (int i = 20; i >= 0; i--) {
			if (anc[i][u] != anc[i][v]) {
				u = anc[i][u];
				v = anc[i][v];
			}
		}

		return anc[0][u];
	}
};
]]></content>
  <tabTrigger>lca</tabTrigger>
  <description>Binary Lifting</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>